{"version":3,"sources":["actions/PageActions.js","reducers/page.js","reducers/user.js","actions/ModalAction.js","reducers/modal.js","reducers/index.js","actions/UserActions.js","store/configureStore.js","containers/ModalContainer.js","components/Page.js","containers/PageContainer.js","components/User.js","containers/UserContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["photosArr","cached","makeYearPhotos","photos","selectedYear","yearPhotos","forEach","item","Date","date","getFullYear","push","sort","a","b","likes","count","getPhotos","year","dispatch","type","payload","getMorePhotos","offset","VK","Api","call","extended","v","r","concat","response","items","e","error","Error","initialState","isFetching","showModal","name","age","togglerModal","bool","link","initState","fullSizeImg","rootReducer","combineReducers","page","state","action","message","user","modal","store","createStore","applyMiddleware","thunk","logger","ModalContainer","handlerCloseModal","props","handleAfterOpenFunc","document","querySelector","addEventListener","style","left","documentElement","clientWidth","offsetWidth","shouldCloseOnEsc","shouldCloseOnOverlayClick","onRequestClose","this","handleCloseModal","closeTimeoutMS","overlayClassName","className","onAfterOpen","isOpen","contentLabel","appElement","body","src","alt","onClick","React","Component","connect","Page","onBtnClick","currentTarget","innerText","handlerOpenModal","target","dataset","map","el","key","id","sizes","url","data-link","length","icon","faHeart","index","renderButton","renderTemplate","PageContainer","User","handleLogin","UserContainer","Auth","login","session","username","first_name","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.096c4e5d.chunk.js","sourcesContent":["export const GET_PHOTOS_REQUEST = 'GET_PHOTOS_REQUEST';\r\nexport const GET_PHOTOS_SUCCESS = 'GET_PHOTOS_SUCCESS';\r\nexport const GET_PHOTOS_FAIL = 'GET_PHOTOS_FAIL';\r\n\r\nlet photosArr = [];\r\nlet cached = false;\r\nfunction getMorePhotos(offset, count, year, dispatch) {\r\n\r\n  //eslint-disable-next-line no-undef\r\n  VK.Api.call(\r\n    'photos.getAll',\r\n    { extended: 1, count: count, offset: offset, v: '5.80' },\r\n    r => {\r\n      try {\r\n        photosArr = photosArr.concat(r.response.items);\r\n        if (offset <= r.response.count) {\r\n          offset += 200;\r\n          getMorePhotos(offset, count, year, dispatch);\r\n        } else {\r\n          let photos = makeYearPhotos(photosArr, year);\r\n          cached = true;\r\n          dispatch({\r\n            type: GET_PHOTOS_SUCCESS,\r\n            payload: photos,\r\n          })\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: GET_PHOTOS_FAIL,\r\n          error: true,\r\n          payload: new Error(e),\r\n        })\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nfunction makeYearPhotos(photos, selectedYear) {\r\n  let createdYear,\r\n    yearPhotos = [];\r\n\r\n  photos.forEach(item => {\r\n    createdYear = new Date(item.date * 1000).getFullYear();\r\n\r\n    if (createdYear === selectedYear) {\r\n      yearPhotos.push(item)\r\n    }\r\n  });\r\n\r\n  yearPhotos.sort((a, b) => b.likes.count - a.likes.count);\r\n\r\n  return yearPhotos;\r\n}\r\n\r\nexport function getPhotos(year) {\r\n\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_PHOTOS_REQUEST,\r\n      payload: year\r\n    })\r\n\r\n    if (cached) {\r\n      let photos = makeYearPhotos(photosArr, year);\r\n      dispatch({\r\n        type: GET_PHOTOS_SUCCESS,\r\n        payload: photos,\r\n      })\r\n    } else {\r\n      getMorePhotos(0, 200, year, dispatch)\r\n    }\r\n  }\r\n}\r\n\r\n","import { GET_PHOTOS_REQUEST, GET_PHOTOS_SUCCESS, GET_PHOTOS_FAIL } from '../actions/PageActions'\r\n\r\nconst initialState = {\r\n  year: 2020,\r\n  photos: [],\r\n  isFetching: false,\r\n  error: '',\r\n  showModal: false,\r\n}\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PHOTOS_REQUEST:\r\n      return { ...state, year: action.payload, isFetching: true, error: '' };\r\n\r\n    case GET_PHOTOS_SUCCESS:\r\n      return { ...state, photos: action.payload, isFetching: false, error: '' };\r\n\r\n    case GET_PHOTOS_FAIL:\r\n      return { ...state, error: action.payload.message, isFetching: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL } from '../actions/UserActions'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  isFetching: false,\r\n  age: 25,\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return { ...state, isFetching: true, error: '' }\r\n\r\n    case LOGIN_SUCCESS:\r\n      return { ...state, isFetching: false, name: action.payload }\r\n\r\n    case LOGIN_FAIL:\r\n      return { ...state, isFetching: false, error: action.payload.message }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\nexport const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\n\r\nexport function togglerModal(bool, link) {\r\n  if (bool) {\r\n    return dispatch => {\r\n      dispatch({\r\n        type: OPEN_MODAL,\r\n        payload: link,\r\n\r\n      })\r\n    }\r\n  } else {\r\n    return dispatch => {\r\n      dispatch({\r\n        type: CLOSE_MODAL,\r\n        payload: link,\r\n      })\r\n    }\r\n  }\r\n}","import { OPEN_MODAL, CLOSE_MODAL } from '../actions/ModalAction'\r\n\r\nconst initState = {\r\n  showModal: false,\r\n  fullSizeImg: '',\r\n}\r\n\r\nexport function modalReducer(state = initState, action) {\r\n  switch (action.type) {\r\n\r\n    case OPEN_MODAL:\r\n      return { ...state, showModal: true, fullSizeImg: action.payload }\r\n\r\n    case CLOSE_MODAL:\r\n      return { ...state, showModal: false, }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { pageReducer } from './page';\r\nimport { userReducer } from './user';\r\nimport { modalReducer } from './modal'\r\n\r\nexport const rootReducer = combineReducers({\r\n  page: pageReducer,\r\n  user: userReducer,\r\n  modal: modalReducer,\r\n})","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport function handleLogin() {\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: LOGIN_REQUEST,\r\n    })\r\n    // eslint-disable-next-line no-undef\r\n    VK.Auth.login(r => {\r\n      if (r.session) {\r\n        let username = r.session.user.first_name\r\n\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: username,\r\n        })\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n          error: true,\r\n          payload: new Error('Auth Error')\r\n        })\r\n      }\r\n    }, 4)\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../reducers';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\r\n","import React from 'react';\r\nimport Modal from 'react-modal';\r\nimport { connect } from 'react-redux';\r\nimport { togglerModal } from '../actions/ModalAction'\r\n\r\nclass ModalContainer extends React.Component {\r\n\r\n  handlerCloseModal = e => {\r\n    this.props.togglerModal(false, '')\r\n  }\r\n\r\n  handleAfterOpenFunc = () => {\r\n    let modal = document.querySelector('.modal')\r\n    let img = document.querySelector('.modal img')\r\n    img.addEventListener('load', e => {\r\n      modal.style.left = document.documentElement.clientWidth / 2 - modal.offsetWidth / 2 + 'px'\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        shouldCloseOnEsc={true}\r\n        shouldCloseOnOverlayClick={true}\r\n        onRequestClose={this.handleCloseModal}\r\n        closeTimeoutMS={200}\r\n        overlayClassName=\"overlay\"\r\n        className=\"modal\"\r\n        onAfterOpen={this.handleAfterOpenFunc}\r\n        isOpen={this.props.showModal}\r\n        contentLabel=\"modal\"\r\n        appElement={document.body}>\r\n        <img src={this.props.link} alt=\"\" />\r\n        <button\r\n          onClick={this.handlerCloseModal}\r\n        >X</button>\r\n\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    showModal: store.modal.showModal,\r\n    link: store.modal.fullSizeImg,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    togglerModal: (bool, link) => dispatch(togglerModal(bool, link)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ModalContainer from '../containers/ModalContainer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport default class Page extends React.Component {\r\n  onBtnClick = e => {\r\n    const year = +e.currentTarget.innerText;\r\n    this.props.getPhotos(year)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getPhotos(2019)\r\n  }\r\n\r\n  handlerOpenModal = e => {\r\n    this.props.togglerModal(true, e.target.dataset.link)\r\n  }\r\n\r\n  renderTemplate() {\r\n    const { photos, isFetching, error } = this.props;\r\n    if (error) {\r\n      return <p className=\"error\">При загрузке возникла ошибка:( Пожалуйста, обновите страницу!</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Loading... Please wait.</p>\r\n    } else {\r\n      return photos.map((el) => {\r\n        return (\r\n          <div key={el.id}>\r\n            <div className=\"wrap\">\r\n              <img\r\n                onClick={this.handlerOpenModal}\r\n                src={el.sizes[2].url}\r\n                alt=\"\"\r\n                data-link={el.sizes[el.sizes.length - 1].url} />\r\n            </div>\r\n            <p className=\"like-count\">{el.likes.count}\r\n              <FontAwesomeIcon icon={faHeart} />\r\n            </p>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  renderButton() {\r\n    const years = [2019, 2018, 2017, 2016, 2015, 2014, 2013]\r\n    return years.map((item, index) => {\r\n      return <button onClick={this.onBtnClick} key={index}>{item}</button>\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { year, photos } = this.props\r\n    return (\r\n      <div>\r\n        <div className=\"btn-block\">\r\n          <h2>Выберите год</h2>\r\n          {this.renderButton()}\r\n        </div>\r\n        <p className=\"photos-info\">У вас {photos.length}  фото за {year} год</p>\r\n        <div className=\"grid\">\r\n          {this.renderTemplate()}\r\n        </div>\r\n        <ModalContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPage.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  photos: PropTypes.array.isRequired,\r\n  getPhotos: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getPhotos } from '../actions/PageActions';\r\nimport { togglerModal } from '../actions/ModalAction'\r\nimport Page from '../components/Page';\r\n\r\n\r\nclass PageContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Page\r\n        error={this.props.page.error}\r\n        isFetching={this.props.page.isFetching}\r\n        photos={this.props.page.photos}\r\n        year={this.props.page.year}\r\n        getPhotos={this.props.getPhotos}\r\n        togglerModal={this.props.togglerModal}></Page>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    page: store.page,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getPhotos: year => dispatch(getPhotos(year)),\r\n    togglerModal: (bool, link) => dispatch(togglerModal(bool, link)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageContainer)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class User extends React.Component {\r\n  renderTemplate = () => {\r\n    const { name, error, isFetching } = this.props;\r\n\r\n    if (error) {\r\n      return <p>Во время запроса произошла ошибка:( <br />Пожалуйста, обновите страницу!</p>\r\n    }\r\n\r\n    if (isFetching) {\r\n      return <p>Загружаю...</p>\r\n    }\r\n\r\n    if (name) {\r\n      return <p>Привет, {name}!</p>\r\n    } else {\r\n      return (\r\n        <button onClick={this.props.handleLogin}>\r\n          Войти\r\n        </button>\r\n      )\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderTemplate()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  handleLogin: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport User from '../components/User'\r\nimport { handleLogin } from '../actions/UserActions';\r\nimport { connect } from 'react-redux'\r\n\r\nexport class UserContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <User\r\n        name={this.props.user.name}\r\n        error={this.props.user.error}\r\n        isFetching={this.props.user.isFetching}\r\n        handleLogin={this.props.handleLogin}></User>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = store => {\r\n  return {\r\n    user: store.user,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleLogin: () => dispatch(handleLogin()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","import React, { Component } from 'react';\r\nimport PageContainer from '../containers/PageContainer';\r\nimport UserContainer from '../containers/UserContainer';\r\nimport './App.scss';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Мой топ фото</h1>\r\n          <UserContainer />\r\n        </header>\r\n        <PageContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/configureStore'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}